// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Competition.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from Competition.proto</summary>
public static partial class CompetitionReflection {

  #region Descriptor
  /// <summary>File descriptor for Competition.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static CompetitionReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChFDb21wZXRpdGlvbi5wcm90byJWCgRVc2VyEgoKAmlkGAEgASgFEgwKBG5h",
          "bWUYAiABKAkSEAoIdXNlcm5hbWUYAyABKAkSEAoIcGFzc3dvcmQYBCABKAkS",
          "EAoIb2ZmaWNlTm8YBSABKAUiLgoFQ2hpbGQSCgoCaWQYASABKAUSDAoEbmFt",
          "ZRgCIAEoCRILCgNhZ2UYAyABKAUiTwoEVGFzaxIKCgJpZBgBIAEoBRITCgtk",
          "ZXNjcmlwdGlvbhgCIAEoCRITCgthZ2VDYXRTdGFydBgDIAEoBRIRCglhZ2VD",
          "YXRFbmQYBCABKAUiZgoHVGFza0RUTxIKCgJpZBgBIAEoBRITCgtkZXNjcmlw",
          "dGlvbhgCIAEoCRITCgthZ2VDYXRTdGFydBgDIAEoBRIRCglhZ2VDYXRFbmQY",
          "BCABKAUSEgoKbm9jaGlsZHJlbhgFIAEoBSJHCg1QYXJ0aWNpcGF0aW9uEgoK",
          "AmlkGAEgASgFEhUKBWNoaWxkGAIgASgLMgYuQ2hpbGQSEwoEdGFzaxgDIAEo",
          "CzIFLlRhc2siugIKB1JlcXVlc3QSGwoEdHlwZRgBIAEoDjINLlJlcXVlc3Qu",
          "VHlwZRIVCgR1c2VyGAIgASgLMgUuVXNlckgAEicKDXBhcnRpY2lwYXRpb24Y",
          "AyABKAsyDi5QYXJ0aWNpcGF0aW9uSAASFwoFY2hpbGQYBCABKAsyBi5DaGls",
          "ZEgAEhUKBHRhc2sYBSABKAsyBS5UYXNrSAAilgEKBFR5cGUSCwoHVW5rbm93",
          "bhAAEgkKBUxvZ2luEAESCgoGTG9nb3V0EAISFAoQR2V0X3BhcnRpY2lwYW50",
          "cxADEhUKEUFkZF9wYXJ0aWNpcGF0aW9uEAQSCgoGVXBkYXRlEAUSDQoJQWRk",
          "X2NoaWxkEAYSEwoPRmluZF9sYXN0X2NoaWxkEAcSDQoJR2V0X3Rhc2tzEAhC",
          "CQoHcGF5bG9hZCLpAgoIUmVzcG9uc2USHAoEdHlwZRgBIAEoDjIOLlJlc3Bv",
          "bnNlLlR5cGUSDQoFZXJyb3IYAiABKAkSGAoIY2hpbGRyZW4YAyADKAsyBi5D",
          "aGlsZBIXCgV0YXNrcxgEIAMoCzIILlRhc2tEVE8SEwoEdXNlchgFIAEoCzIF",
          "LlVzZXISFQoFY2hpbGQYBiABKAsyBi5DaGlsZBIlCg1wYXJ0aWNpcGF0aW9u",
          "GAcgASgLMg4uUGFydGljaXBhdGlvbiKpAQoEVHlwZRILCgdVbmtub3duEAAS",
          "CQoFTG9naW4QARIKCgZMb2dvdXQQAhIUChBHZXRfcGFydGljaXBhbnRzEAMS",
          "FQoRQWRkX3BhcnRpY2lwYXRpb24QBBIKCgZVcGRhdGUQBRINCglBZGRfY2hp",
          "bGQQBhITCg9GaW5kX2xhc3RfY2hpbGQQBxIGCgJPaxAIEgkKBUVycm9yEAkS",
          "DQoJR2V0X3Rhc2tzEApCLAoUb3JnLmV4YW1wbGUucHJvdG9idWZCFENvbXBl",
          "dGl0aW9uUHJvdG9idWZzYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::User), global::User.Parser, new[]{ "Id", "Name", "Username", "Password", "OfficeNo" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Child), global::Child.Parser, new[]{ "Id", "Name", "Age" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Task), global::Task.Parser, new[]{ "Id", "Description", "AgeCatStart", "AgeCatEnd" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::TaskDTO), global::TaskDTO.Parser, new[]{ "Id", "Description", "AgeCatStart", "AgeCatEnd", "Nochildren" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Participation), global::Participation.Parser, new[]{ "Id", "Child", "Task" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Request), global::Request.Parser, new[]{ "Type", "User", "Participation", "Child", "Task" }, new[]{ "Payload" }, new[]{ typeof(global::Request.Types.Type) }, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Response), global::Response.Parser, new[]{ "Type", "Error", "Children", "Tasks", "User", "Child", "Participation" }, null, new[]{ typeof(global::Response.Types.Type) }, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class User : pb::IMessage<User> {
  private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<User> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CompetitionReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User(User other) : this() {
    id_ = other.id_;
    name_ = other.name_;
    username_ = other.username_;
    password_ = other.password_;
    officeNo_ = other.officeNo_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User Clone() {
    return new User(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 2;
  private string name_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Name {
    get { return name_; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "username" field.</summary>
  public const int UsernameFieldNumber = 3;
  private string username_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Username {
    get { return username_; }
    set {
      username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "password" field.</summary>
  public const int PasswordFieldNumber = 4;
  private string password_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Password {
    get { return password_; }
    set {
      password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "officeNo" field.</summary>
  public const int OfficeNoFieldNumber = 5;
  private int officeNo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int OfficeNo {
    get { return officeNo_; }
    set {
      officeNo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as User);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(User other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Name != other.Name) return false;
    if (Username != other.Username) return false;
    if (Password != other.Password) return false;
    if (OfficeNo != other.OfficeNo) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    if (Username.Length != 0) hash ^= Username.GetHashCode();
    if (Password.Length != 0) hash ^= Password.GetHashCode();
    if (OfficeNo != 0) hash ^= OfficeNo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (Name.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Name);
    }
    if (Username.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Username);
    }
    if (Password.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Password);
    }
    if (OfficeNo != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(OfficeNo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (Username.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
    }
    if (Password.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
    }
    if (OfficeNo != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(OfficeNo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(User other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
    if (other.Username.Length != 0) {
      Username = other.Username;
    }
    if (other.Password.Length != 0) {
      Password = other.Password;
    }
    if (other.OfficeNo != 0) {
      OfficeNo = other.OfficeNo;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 18: {
          Name = input.ReadString();
          break;
        }
        case 26: {
          Username = input.ReadString();
          break;
        }
        case 34: {
          Password = input.ReadString();
          break;
        }
        case 40: {
          OfficeNo = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class Child : pb::IMessage<Child> {
  private static readonly pb::MessageParser<Child> _parser = new pb::MessageParser<Child>(() => new Child());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Child> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CompetitionReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Child() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Child(Child other) : this() {
    id_ = other.id_;
    name_ = other.name_;
    age_ = other.age_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Child Clone() {
    return new Child(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 2;
  private string name_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Name {
    get { return name_; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "age" field.</summary>
  public const int AgeFieldNumber = 3;
  private int age_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Age {
    get { return age_; }
    set {
      age_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Child);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Child other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Name != other.Name) return false;
    if (Age != other.Age) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    if (Age != 0) hash ^= Age.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (Name.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Name);
    }
    if (Age != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Age);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (Age != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Child other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
    if (other.Age != 0) {
      Age = other.Age;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 18: {
          Name = input.ReadString();
          break;
        }
        case 24: {
          Age = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class Task : pb::IMessage<Task> {
  private static readonly pb::MessageParser<Task> _parser = new pb::MessageParser<Task>(() => new Task());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Task> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CompetitionReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Task() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Task(Task other) : this() {
    id_ = other.id_;
    description_ = other.description_;
    ageCatStart_ = other.ageCatStart_;
    ageCatEnd_ = other.ageCatEnd_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Task Clone() {
    return new Task(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "description" field.</summary>
  public const int DescriptionFieldNumber = 2;
  private string description_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Description {
    get { return description_; }
    set {
      description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "ageCatStart" field.</summary>
  public const int AgeCatStartFieldNumber = 3;
  private int ageCatStart_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AgeCatStart {
    get { return ageCatStart_; }
    set {
      ageCatStart_ = value;
    }
  }

  /// <summary>Field number for the "ageCatEnd" field.</summary>
  public const int AgeCatEndFieldNumber = 4;
  private int ageCatEnd_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AgeCatEnd {
    get { return ageCatEnd_; }
    set {
      ageCatEnd_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Task);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Task other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Description != other.Description) return false;
    if (AgeCatStart != other.AgeCatStart) return false;
    if (AgeCatEnd != other.AgeCatEnd) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (Description.Length != 0) hash ^= Description.GetHashCode();
    if (AgeCatStart != 0) hash ^= AgeCatStart.GetHashCode();
    if (AgeCatEnd != 0) hash ^= AgeCatEnd.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (Description.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Description);
    }
    if (AgeCatStart != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(AgeCatStart);
    }
    if (AgeCatEnd != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(AgeCatEnd);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (Description.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
    }
    if (AgeCatStart != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AgeCatStart);
    }
    if (AgeCatEnd != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AgeCatEnd);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Task other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.Description.Length != 0) {
      Description = other.Description;
    }
    if (other.AgeCatStart != 0) {
      AgeCatStart = other.AgeCatStart;
    }
    if (other.AgeCatEnd != 0) {
      AgeCatEnd = other.AgeCatEnd;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 18: {
          Description = input.ReadString();
          break;
        }
        case 24: {
          AgeCatStart = input.ReadInt32();
          break;
        }
        case 32: {
          AgeCatEnd = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class TaskDTO : pb::IMessage<TaskDTO> {
  private static readonly pb::MessageParser<TaskDTO> _parser = new pb::MessageParser<TaskDTO>(() => new TaskDTO());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<TaskDTO> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CompetitionReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TaskDTO() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TaskDTO(TaskDTO other) : this() {
    id_ = other.id_;
    description_ = other.description_;
    ageCatStart_ = other.ageCatStart_;
    ageCatEnd_ = other.ageCatEnd_;
    nochildren_ = other.nochildren_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TaskDTO Clone() {
    return new TaskDTO(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "description" field.</summary>
  public const int DescriptionFieldNumber = 2;
  private string description_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Description {
    get { return description_; }
    set {
      description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "ageCatStart" field.</summary>
  public const int AgeCatStartFieldNumber = 3;
  private int ageCatStart_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AgeCatStart {
    get { return ageCatStart_; }
    set {
      ageCatStart_ = value;
    }
  }

  /// <summary>Field number for the "ageCatEnd" field.</summary>
  public const int AgeCatEndFieldNumber = 4;
  private int ageCatEnd_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AgeCatEnd {
    get { return ageCatEnd_; }
    set {
      ageCatEnd_ = value;
    }
  }

  /// <summary>Field number for the "nochildren" field.</summary>
  public const int NochildrenFieldNumber = 5;
  private int nochildren_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Nochildren {
    get { return nochildren_; }
    set {
      nochildren_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as TaskDTO);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(TaskDTO other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Description != other.Description) return false;
    if (AgeCatStart != other.AgeCatStart) return false;
    if (AgeCatEnd != other.AgeCatEnd) return false;
    if (Nochildren != other.Nochildren) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (Description.Length != 0) hash ^= Description.GetHashCode();
    if (AgeCatStart != 0) hash ^= AgeCatStart.GetHashCode();
    if (AgeCatEnd != 0) hash ^= AgeCatEnd.GetHashCode();
    if (Nochildren != 0) hash ^= Nochildren.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (Description.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Description);
    }
    if (AgeCatStart != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(AgeCatStart);
    }
    if (AgeCatEnd != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(AgeCatEnd);
    }
    if (Nochildren != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(Nochildren);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (Description.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
    }
    if (AgeCatStart != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AgeCatStart);
    }
    if (AgeCatEnd != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AgeCatEnd);
    }
    if (Nochildren != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Nochildren);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(TaskDTO other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.Description.Length != 0) {
      Description = other.Description;
    }
    if (other.AgeCatStart != 0) {
      AgeCatStart = other.AgeCatStart;
    }
    if (other.AgeCatEnd != 0) {
      AgeCatEnd = other.AgeCatEnd;
    }
    if (other.Nochildren != 0) {
      Nochildren = other.Nochildren;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 18: {
          Description = input.ReadString();
          break;
        }
        case 24: {
          AgeCatStart = input.ReadInt32();
          break;
        }
        case 32: {
          AgeCatEnd = input.ReadInt32();
          break;
        }
        case 40: {
          Nochildren = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class Participation : pb::IMessage<Participation> {
  private static readonly pb::MessageParser<Participation> _parser = new pb::MessageParser<Participation>(() => new Participation());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Participation> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CompetitionReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Participation() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Participation(Participation other) : this() {
    id_ = other.id_;
    child_ = other.child_ != null ? other.child_.Clone() : null;
    task_ = other.task_ != null ? other.task_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Participation Clone() {
    return new Participation(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "child" field.</summary>
  public const int ChildFieldNumber = 2;
  private global::Child child_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Child Child {
    get { return child_; }
    set {
      child_ = value;
    }
  }

  /// <summary>Field number for the "task" field.</summary>
  public const int TaskFieldNumber = 3;
  private global::Task task_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Task Task {
    get { return task_; }
    set {
      task_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Participation);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Participation other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (!object.Equals(Child, other.Child)) return false;
    if (!object.Equals(Task, other.Task)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (child_ != null) hash ^= Child.GetHashCode();
    if (task_ != null) hash ^= Task.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (child_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Child);
    }
    if (task_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Task);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (child_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Child);
    }
    if (task_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Task);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Participation other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.child_ != null) {
      if (child_ == null) {
        Child = new global::Child();
      }
      Child.MergeFrom(other.Child);
    }
    if (other.task_ != null) {
      if (task_ == null) {
        Task = new global::Task();
      }
      Task.MergeFrom(other.Task);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 18: {
          if (child_ == null) {
            Child = new global::Child();
          }
          input.ReadMessage(Child);
          break;
        }
        case 26: {
          if (task_ == null) {
            Task = new global::Task();
          }
          input.ReadMessage(Task);
          break;
        }
      }
    }
  }

}

public sealed partial class Request : pb::IMessage<Request> {
  private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CompetitionReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Request(Request other) : this() {
    type_ = other.type_;
    switch (other.PayloadCase) {
      case PayloadOneofCase.User:
        User = other.User.Clone();
        break;
      case PayloadOneofCase.Participation:
        Participation = other.Participation.Clone();
        break;
      case PayloadOneofCase.Child:
        Child = other.Child.Clone();
        break;
      case PayloadOneofCase.Task:
        Task = other.Task.Clone();
        break;
    }

    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Request Clone() {
    return new Request(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private global::Request.Types.Type type_ = global::Request.Types.Type.Unknown;
  /// <summary>
  /// Identifies witch request is filled in.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Request.Types.Type Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "user" field.</summary>
  public const int UserFieldNumber = 2;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::User User {
    get { return payloadCase_ == PayloadOneofCase.User ? (global::User) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.User;
    }
  }

  /// <summary>Field number for the "participation" field.</summary>
  public const int ParticipationFieldNumber = 3;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Participation Participation {
    get { return payloadCase_ == PayloadOneofCase.Participation ? (global::Participation) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Participation;
    }
  }

  /// <summary>Field number for the "child" field.</summary>
  public const int ChildFieldNumber = 4;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Child Child {
    get { return payloadCase_ == PayloadOneofCase.Child ? (global::Child) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Child;
    }
  }

  /// <summary>Field number for the "task" field.</summary>
  public const int TaskFieldNumber = 5;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Task Task {
    get { return payloadCase_ == PayloadOneofCase.Task ? (global::Task) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Task;
    }
  }

  private object payload_;
  /// <summary>Enum of possible cases for the "payload" oneof.</summary>
  public enum PayloadOneofCase {
    None = 0,
    User = 2,
    Participation = 3,
    Child = 4,
    Task = 5,
  }
  private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PayloadOneofCase PayloadCase {
    get { return payloadCase_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearPayload() {
    payloadCase_ = PayloadOneofCase.None;
    payload_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if (!object.Equals(User, other.User)) return false;
    if (!object.Equals(Participation, other.Participation)) return false;
    if (!object.Equals(Child, other.Child)) return false;
    if (!object.Equals(Task, other.Task)) return false;
    if (PayloadCase != other.PayloadCase) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Type != global::Request.Types.Type.Unknown) hash ^= Type.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.User) hash ^= User.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.Participation) hash ^= Participation.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.Child) hash ^= Child.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.Task) hash ^= Task.GetHashCode();
    hash ^= (int) payloadCase_;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Type != global::Request.Types.Type.Unknown) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    if (payloadCase_ == PayloadOneofCase.User) {
      output.WriteRawTag(18);
      output.WriteMessage(User);
    }
    if (payloadCase_ == PayloadOneofCase.Participation) {
      output.WriteRawTag(26);
      output.WriteMessage(Participation);
    }
    if (payloadCase_ == PayloadOneofCase.Child) {
      output.WriteRawTag(34);
      output.WriteMessage(Child);
    }
    if (payloadCase_ == PayloadOneofCase.Task) {
      output.WriteRawTag(42);
      output.WriteMessage(Task);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Type != global::Request.Types.Type.Unknown) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (payloadCase_ == PayloadOneofCase.User) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
    }
    if (payloadCase_ == PayloadOneofCase.Participation) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Participation);
    }
    if (payloadCase_ == PayloadOneofCase.Child) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Child);
    }
    if (payloadCase_ == PayloadOneofCase.Task) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Task);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Request other) {
    if (other == null) {
      return;
    }
    if (other.Type != global::Request.Types.Type.Unknown) {
      Type = other.Type;
    }
    switch (other.PayloadCase) {
      case PayloadOneofCase.User:
        if (User == null) {
          User = new global::User();
        }
        User.MergeFrom(other.User);
        break;
      case PayloadOneofCase.Participation:
        if (Participation == null) {
          Participation = new global::Participation();
        }
        Participation.MergeFrom(other.Participation);
        break;
      case PayloadOneofCase.Child:
        if (Child == null) {
          Child = new global::Child();
        }
        Child.MergeFrom(other.Child);
        break;
      case PayloadOneofCase.Task:
        if (Task == null) {
          Task = new global::Task();
        }
        Task.MergeFrom(other.Task);
        break;
    }

    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Type = (global::Request.Types.Type) input.ReadEnum();
          break;
        }
        case 18: {
          global::User subBuilder = new global::User();
          if (payloadCase_ == PayloadOneofCase.User) {
            subBuilder.MergeFrom(User);
          }
          input.ReadMessage(subBuilder);
          User = subBuilder;
          break;
        }
        case 26: {
          global::Participation subBuilder = new global::Participation();
          if (payloadCase_ == PayloadOneofCase.Participation) {
            subBuilder.MergeFrom(Participation);
          }
          input.ReadMessage(subBuilder);
          Participation = subBuilder;
          break;
        }
        case 34: {
          global::Child subBuilder = new global::Child();
          if (payloadCase_ == PayloadOneofCase.Child) {
            subBuilder.MergeFrom(Child);
          }
          input.ReadMessage(subBuilder);
          Child = subBuilder;
          break;
        }
        case 42: {
          global::Task subBuilder = new global::Task();
          if (payloadCase_ == PayloadOneofCase.Task) {
            subBuilder.MergeFrom(Task);
          }
          input.ReadMessage(subBuilder);
          Task = subBuilder;
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the Request message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum Type {
      [pbr::OriginalName("Unknown")] Unknown = 0,
      [pbr::OriginalName("Login")] Login = 1,
      [pbr::OriginalName("Logout")] Logout = 2,
      [pbr::OriginalName("Get_participants")] GetParticipants = 3,
      [pbr::OriginalName("Add_participation")] AddParticipation = 4,
      [pbr::OriginalName("Update")] Update = 5,
      [pbr::OriginalName("Add_child")] AddChild = 6,
      [pbr::OriginalName("Find_last_child")] FindLastChild = 7,
      [pbr::OriginalName("Get_tasks")] GetTasks = 8,
    }

  }
  #endregion

}

public sealed partial class Response : pb::IMessage<Response> {
  private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CompetitionReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Response(Response other) : this() {
    type_ = other.type_;
    error_ = other.error_;
    children_ = other.children_.Clone();
    tasks_ = other.tasks_.Clone();
    user_ = other.user_ != null ? other.user_.Clone() : null;
    child_ = other.child_ != null ? other.child_.Clone() : null;
    participation_ = other.participation_ != null ? other.participation_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Response Clone() {
    return new Response(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private global::Response.Types.Type type_ = global::Response.Types.Type.Unknown;
  /// <summary>
  /// Identifies witch request is filled in.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Response.Types.Type Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "error" field.</summary>
  public const int ErrorFieldNumber = 2;
  private string error_ = "";
  /// <summary>
  ///One of the following will be filled in, depending on the type.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Error {
    get { return error_; }
    set {
      error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "children" field.</summary>
  public const int ChildrenFieldNumber = 3;
  private static readonly pb::FieldCodec<global::Child> _repeated_children_codec
      = pb::FieldCodec.ForMessage(26, global::Child.Parser);
  private readonly pbc::RepeatedField<global::Child> children_ = new pbc::RepeatedField<global::Child>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Child> Children {
    get { return children_; }
  }

  /// <summary>Field number for the "tasks" field.</summary>
  public const int TasksFieldNumber = 4;
  private static readonly pb::FieldCodec<global::TaskDTO> _repeated_tasks_codec
      = pb::FieldCodec.ForMessage(34, global::TaskDTO.Parser);
  private readonly pbc::RepeatedField<global::TaskDTO> tasks_ = new pbc::RepeatedField<global::TaskDTO>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::TaskDTO> Tasks {
    get { return tasks_; }
  }

  /// <summary>Field number for the "user" field.</summary>
  public const int UserFieldNumber = 5;
  private global::User user_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::User User {
    get { return user_; }
    set {
      user_ = value;
    }
  }

  /// <summary>Field number for the "child" field.</summary>
  public const int ChildFieldNumber = 6;
  private global::Child child_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Child Child {
    get { return child_; }
    set {
      child_ = value;
    }
  }

  /// <summary>Field number for the "participation" field.</summary>
  public const int ParticipationFieldNumber = 7;
  private global::Participation participation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Participation Participation {
    get { return participation_; }
    set {
      participation_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if (Error != other.Error) return false;
    if(!children_.Equals(other.children_)) return false;
    if(!tasks_.Equals(other.tasks_)) return false;
    if (!object.Equals(User, other.User)) return false;
    if (!object.Equals(Child, other.Child)) return false;
    if (!object.Equals(Participation, other.Participation)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Type != global::Response.Types.Type.Unknown) hash ^= Type.GetHashCode();
    if (Error.Length != 0) hash ^= Error.GetHashCode();
    hash ^= children_.GetHashCode();
    hash ^= tasks_.GetHashCode();
    if (user_ != null) hash ^= User.GetHashCode();
    if (child_ != null) hash ^= Child.GetHashCode();
    if (participation_ != null) hash ^= Participation.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Type != global::Response.Types.Type.Unknown) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    if (Error.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Error);
    }
    children_.WriteTo(output, _repeated_children_codec);
    tasks_.WriteTo(output, _repeated_tasks_codec);
    if (user_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(User);
    }
    if (child_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(Child);
    }
    if (participation_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(Participation);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Type != global::Response.Types.Type.Unknown) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (Error.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
    }
    size += children_.CalculateSize(_repeated_children_codec);
    size += tasks_.CalculateSize(_repeated_tasks_codec);
    if (user_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
    }
    if (child_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Child);
    }
    if (participation_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Participation);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Response other) {
    if (other == null) {
      return;
    }
    if (other.Type != global::Response.Types.Type.Unknown) {
      Type = other.Type;
    }
    if (other.Error.Length != 0) {
      Error = other.Error;
    }
    children_.Add(other.children_);
    tasks_.Add(other.tasks_);
    if (other.user_ != null) {
      if (user_ == null) {
        User = new global::User();
      }
      User.MergeFrom(other.User);
    }
    if (other.child_ != null) {
      if (child_ == null) {
        Child = new global::Child();
      }
      Child.MergeFrom(other.Child);
    }
    if (other.participation_ != null) {
      if (participation_ == null) {
        Participation = new global::Participation();
      }
      Participation.MergeFrom(other.Participation);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Type = (global::Response.Types.Type) input.ReadEnum();
          break;
        }
        case 18: {
          Error = input.ReadString();
          break;
        }
        case 26: {
          children_.AddEntriesFrom(input, _repeated_children_codec);
          break;
        }
        case 34: {
          tasks_.AddEntriesFrom(input, _repeated_tasks_codec);
          break;
        }
        case 42: {
          if (user_ == null) {
            User = new global::User();
          }
          input.ReadMessage(User);
          break;
        }
        case 50: {
          if (child_ == null) {
            Child = new global::Child();
          }
          input.ReadMessage(Child);
          break;
        }
        case 58: {
          if (participation_ == null) {
            Participation = new global::Participation();
          }
          input.ReadMessage(Participation);
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the Response message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum Type {
      [pbr::OriginalName("Unknown")] Unknown = 0,
      [pbr::OriginalName("Login")] Login = 1,
      [pbr::OriginalName("Logout")] Logout = 2,
      [pbr::OriginalName("Get_participants")] GetParticipants = 3,
      [pbr::OriginalName("Add_participation")] AddParticipation = 4,
      [pbr::OriginalName("Update")] Update = 5,
      [pbr::OriginalName("Add_child")] AddChild = 6,
      [pbr::OriginalName("Find_last_child")] FindLastChild = 7,
      [pbr::OriginalName("Ok")] Ok = 8,
      [pbr::OriginalName("Error")] Error = 9,
      [pbr::OriginalName("Get_tasks")] GetTasks = 10,
    }

  }
  #endregion

}

#endregion


#endregion Designer generated code
